--[[
    Matcha UI Library v1.0 - Matcha LuaVM Compatible
    A Rayfield-inspired UI library for Matcha LuaVM
]]

local Matcha = {}

-- Services (only those supported by Matcha LuaVM)
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")

-- Variables
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- Utility Functions (No TweenService - direct property changes)
local function AnimateProperty(obj, property, targetValue, duration)
    -- Simple direct property change since TweenService may not be supported
    obj[property] = targetValue
end

local function MakeDraggable(frame, handle)
    local dragging = false
    local dragInput, mousePos, framePos
    
    handle.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            mousePos = input.Position
            framePos = frame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)
    
    handle.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)
    
    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            local delta = input.Position - mousePos
            frame.Position = UDim2.new(
                framePos.X.Scale,
                framePos.X.Offset + delta.X,
                framePos.Y.Scale,
                framePos.Y.Offset + delta.Y
            )
        end
    end)
end

-- Main Library
function Matcha:CreateWindow(Config)
    local Window = {}
    Window.Tabs = {}
    Window.CurrentTab = nil
    
    -- Create ScreenGui
    local ScreenGui = Instance.new("ScreenGui")
    ScreenGui.Name = "MatchaUI_" .. math.random(1000, 9999)
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    ScreenGui.ResetOnSpawn = false
    ScreenGui.Parent = CoreGui
    
    -- Main Frame
    local MainFrame = Instance.new("Frame")
    MainFrame.Name = "Main"
    MainFrame.Size = UDim2.new(0, 550, 0, 450)
    MainFrame.Position = UDim2.new(0.5, -275, 0.5, -225)
    MainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 12)
    UICorner.Parent = MainFrame
    
    -- Top Bar
    local TopBar = Instance.new("Frame")
    TopBar.Name = "TopBar"
    TopBar.Size = UDim2.new(1, 0, 0, 45)
    TopBar.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    TopBar.BorderSizePixel = 0
    TopBar.Parent = MainFrame
    
    local TopBarCorner = Instance.new("UICorner")
    TopBarCorner.CornerRadius = UDim.new(0, 12)
    TopBarCorner.Parent = TopBar
    
    local TopBarFix = Instance.new("Frame")
    TopBarFix.Name = "Fix"
    TopBarFix.Size = UDim2.new(1, 0, 0, 12)
    TopBarFix.Position = UDim2.new(0, 0, 1, -12)
    TopBarFix.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    TopBarFix.BorderSizePixel = 0
    TopBarFix.Parent = TopBar
    
    -- Title
    local Title = Instance.new("TextLabel")
    Title.Name = "Title"
    Title.Size = UDim2.new(1, -100, 1, 0)
    Title.Position = UDim2.new(0, 15, 0, 0)
    Title.BackgroundTransparency = 1
    Title.Text = Config.Name or "Matcha UI"
    Title.TextColor3 = Color3.fromRGB(240, 240, 245)
    Title.TextSize = 16
    Title.Font = Enum.Font.GothamBold
    Title.TextXAlignment = Enum.TextXAlignment.Left
    Title.Parent = TopBar
    
    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Name = "Close"
    CloseButton.Size = UDim2.new(0, 35, 0, 35)
    CloseButton.Position = UDim2.new(1, -40, 0, 5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    CloseButton.Text = "X"
    CloseButton.TextColor3 = Color3.fromRGB(200, 200, 205)
    CloseButton.TextSize = 16
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.Parent = TopBar
    
    local CloseCorner = Instance.new("UICorner")
    CloseCorner.CornerRadius = UDim.new(0, 8)
    CloseCorner.Parent = CloseButton
    
    CloseButton.MouseButton1Click:Connect(function()
        ScreenGui:Destroy()
    end)
    
    CloseButton.MouseEnter:Connect(function()
        CloseButton.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
    end)
    
    CloseButton.MouseLeave:Connect(function()
        CloseButton.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    end)
    
    -- Tab Container
    local TabContainer = Instance.new("Frame")
    TabContainer.Name = "TabContainer"
    TabContainer.Size = UDim2.new(0, 140, 1, -55)
    TabContainer.Position = UDim2.new(0, 10, 0, 50)
    TabContainer.BackgroundTransparency = 1
    TabContainer.Parent = MainFrame
    
    local TabList = Instance.new("UIListLayout")
    TabList.SortOrder = Enum.SortOrder.LayoutOrder
    TabList.Padding = UDim.new(0, 5)
    TabList.Parent = TabContainer
    
    -- Content Container
    local ContentContainer = Instance.new("Frame")
    ContentContainer.Name = "ContentContainer"
    ContentContainer.Size = UDim2.new(1, -165, 1, -65)
    ContentContainer.Position = UDim2.new(0, 155, 0, 55)
    ContentContainer.BackgroundTransparency = 1
    ContentContainer.ClipsDescendants = true
    ContentContainer.Parent = MainFrame
    
    -- Make Draggable
    MakeDraggable(MainFrame, TopBar)
    
    -- CreateTab Function
    function Window:CreateTab(Name, Icon)
        local Tab = {}
        Tab.Elements = {}
        
        -- Tab Button
        local TabButton = Instance.new("TextButton")
        TabButton.Name = Name
        TabButton.Size = UDim2.new(1, 0, 0, 35)
        TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
        TabButton.Text = ""
        TabButton.Parent = TabContainer
        
        local TabCorner = Instance.new("UICorner")
        TabCorner.CornerRadius = UDim.new(0, 8)
        TabCorner.Parent = TabButton
        
        local TabTitle = Instance.new("TextLabel")
        TabTitle.Size = UDim2.new(1, -40, 1, 0)
        TabTitle.Position = UDim2.new(0, 35, 0, 0)
        TabTitle.BackgroundTransparency = 1
        TabTitle.Text = Name
        TabTitle.TextColor3 = Color3.fromRGB(180, 180, 185)
        TabTitle.TextSize = 14
        TabTitle.Font = Enum.Font.GothamSemibold
        TabTitle.TextXAlignment = Enum.TextXAlignment.Left
        TabTitle.Parent = TabButton
        
        -- Tab Content
        local TabContent = Instance.new("ScrollingFrame")
        TabContent.Name = Name .. "Content"
        TabContent.Size = UDim2.new(1, 0, 1, 0)
        TabContent.BackgroundTransparency = 1
        TabContent.BorderSizePixel = 0
        TabContent.ScrollBarThickness = 4
        TabContent.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 105)
        TabContent.CanvasSize = UDim2.new(0, 0, 0, 0)
        TabContent.Visible = false
        TabContent.Parent = ContentContainer
        
        local ContentList = Instance.new("UIListLayout")
        ContentList.SortOrder = Enum.SortOrder.LayoutOrder
        ContentList.Padding = UDim.new(0, 8)
        ContentList.Parent = TabContent
        
        ContentList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
            TabContent.CanvasSize = UDim2.new(0, 0, 0, ContentList.AbsoluteContentSize.Y + 10)
        end)
        
        -- Tab Click
        TabButton.MouseButton1Click:Connect(function()
            for i, tab in pairs(Window.Tabs) do
                tab.Button.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
                tab.Title.TextColor3 = Color3.fromRGB(180, 180, 185)
                tab.Content.Visible = false
            end
            
            TabButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
            TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            TabContent.Visible = true
            Window.CurrentTab = Tab
        end)
        
        TabButton.MouseEnter:Connect(function()
            if Window.CurrentTab ~= Tab then
                TabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            end
        end)
        
        TabButton.MouseLeave:Connect(function()
            if Window.CurrentTab ~= Tab then
                TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            end
        end)
        
        Tab.Button = TabButton
        Tab.Title = TabTitle
        Tab.Content = TabContent
        table.insert(Window.Tabs, Tab)
        
        -- Select first tab
        if #Window.Tabs == 1 then
            TabButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
            TabTitle.TextColor3 = Color3.fromRGB(255, 255, 255)
            TabContent.Visible = true
            Window.CurrentTab = Tab
        end
        
        -- CreateSection
        function Tab:CreateSection(Name)
            local SectionLabel = Instance.new("TextLabel")
            SectionLabel.Name = "Section"
            SectionLabel.Size = UDim2.new(1, 0, 0, 25)
            SectionLabel.BackgroundTransparency = 1
            SectionLabel.Text = Name
            SectionLabel.TextColor3 = Color3.fromRGB(138, 43, 226)
            SectionLabel.TextSize = 15
            SectionLabel.Font = Enum.Font.GothamBold
            SectionLabel.TextXAlignment = Enum.TextXAlignment.Left
            SectionLabel.Parent = TabContent
        end
        
        -- CreateButton
        function Tab:CreateButton(Config)
            local ButtonFrame = Instance.new("Frame")
            ButtonFrame.Name = "Button"
            ButtonFrame.Size = UDim2.new(1, 0, 0, 40)
            ButtonFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            ButtonFrame.Parent = TabContent
            
            local ButtonCorner = Instance.new("UICorner")
            ButtonCorner.CornerRadius = UDim.new(0, 8)
            ButtonCorner.Parent = ButtonFrame
            
            local Button = Instance.new("TextButton")
            Button.Size = UDim2.new(1, 0, 1, 0)
            Button.BackgroundTransparency = 1
            Button.Text = ""
            Button.Parent = ButtonFrame
            
            local ButtonText = Instance.new("TextLabel")
            ButtonText.Size = UDim2.new(1, -20, 1, 0)
            ButtonText.Position = UDim2.new(0, 10, 0, 0)
            ButtonText.BackgroundTransparency = 1
            ButtonText.Text = Config.Name or "Button"
            ButtonText.TextColor3 = Color3.fromRGB(200, 200, 205)
            ButtonText.TextSize = 14
            ButtonText.Font = Enum.Font.Gotham
            ButtonText.TextXAlignment = Enum.TextXAlignment.Left
            ButtonText.Parent = ButtonFrame
            
            Button.MouseButton1Click:Connect(function()
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
                wait(0.1)
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
                
                if Config.Callback then
                    Config.Callback()
                end
            end)
            
            Button.MouseEnter:Connect(function()
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
            end)
            
            Button.MouseLeave:Connect(function()
                ButtonFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            end)
        end
        
        -- CreateToggle
        function Tab:CreateToggle(Config)
            local ToggleFrame = Instance.new("Frame")
            ToggleFrame.Name = "Toggle"
            ToggleFrame.Size = UDim2.new(1, 0, 0, 40)
            ToggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            ToggleFrame.Parent = TabContent
            
            local ToggleCorner = Instance.new("UICorner")
            ToggleCorner.CornerRadius = UDim.new(0, 8)
            ToggleCorner.Parent = ToggleFrame
            
            local ToggleText = Instance.new("TextLabel")
            ToggleText.Size = UDim2.new(1, -60, 1, 0)
            ToggleText.Position = UDim2.new(0, 10, 0, 0)
            ToggleText.BackgroundTransparency = 1
            ToggleText.Text = Config.Name or "Toggle"
            ToggleText.TextColor3 = Color3.fromRGB(200, 200, 205)
            ToggleText.TextSize = 14
            ToggleText.Font = Enum.Font.Gotham
            ToggleText.TextXAlignment = Enum.TextXAlignment.Left
            ToggleText.Parent = ToggleFrame
            
            local ToggleButton = Instance.new("TextButton")
            ToggleButton.Size = UDim2.new(0, 45, 0, 24)
            ToggleButton.Position = UDim2.new(1, -55, 0.5, -12)
            ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            ToggleButton.Text = ""
            ToggleButton.Parent = ToggleFrame
            
            local ToggleBtnCorner = Instance.new("UICorner")
            ToggleBtnCorner.CornerRadius = UDim.new(1, 0)
            ToggleBtnCorner.Parent = ToggleButton
            
            local ToggleCircle = Instance.new("Frame")
            ToggleCircle.Size = UDim2.new(0, 18, 0, 18)
            ToggleCircle.Position = UDim2.new(0, 3, 0.5, -9)
            ToggleCircle.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
            ToggleCircle.Parent = ToggleButton
            
            local CircleCorner = Instance.new("UICorner")
            CircleCorner.CornerRadius = UDim.new(1, 0)
            CircleCorner.Parent = ToggleCircle
            
            local toggled = Config.CurrentValue or false
            
            if toggled then
                ToggleButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
                ToggleCircle.Position = UDim2.new(1, -21, 0.5, -9)
                ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            end
            
            ToggleButton.MouseButton1Click:Connect(function()
                toggled = not toggled
                
                if toggled then
                    ToggleButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
                    ToggleCircle.Position = UDim2.new(1, -21, 0.5, -9)
                    ToggleCircle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                else
                    ToggleButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
                    ToggleCircle.Position = UDim2.new(0, 3, 0.5, -9)
                    ToggleCircle.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
                end
                
                if Config.Callback then
                    Config.Callback(toggled)
                end
            end)
        end
        
        -- CreateSlider
        function Tab:CreateSlider(Config)
            local SliderFrame = Instance.new("Frame")
            SliderFrame.Name = "Slider"
            SliderFrame.Size = UDim2.new(1, 0, 0, 55)
            SliderFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            SliderFrame.Parent = TabContent
            
            local SliderCorner = Instance.new("UICorner")
            SliderCorner.CornerRadius = UDim.new(0, 8)
            SliderCorner.Parent = SliderFrame
            
            local SliderText = Instance.new("TextLabel")
            SliderText.Size = UDim2.new(1, -60, 0, 20)
            SliderText.Position = UDim2.new(0, 10, 0, 5)
            SliderText.BackgroundTransparency = 1
            SliderText.Text = Config.Name or "Slider"
            SliderText.TextColor3 = Color3.fromRGB(200, 200, 205)
            SliderText.TextSize = 14
            SliderText.Font = Enum.Font.Gotham
            SliderText.TextXAlignment = Enum.TextXAlignment.Left
            SliderText.Parent = SliderFrame
            
            local SliderValue = Instance.new("TextLabel")
            SliderValue.Size = UDim2.new(0, 50, 0, 20)
            SliderValue.Position = UDim2.new(1, -60, 0, 5)
            SliderValue.BackgroundTransparency = 1
            SliderValue.Text = tostring(Config.CurrentValue or Config.Range[1])
            SliderValue.TextColor3 = Color3.fromRGB(138, 43, 226)
            SliderValue.TextSize = 14
            SliderValue.Font = Enum.Font.GothamBold
            SliderValue.TextXAlignment = Enum.TextXAlignment.Right
            SliderValue.Parent = SliderFrame
            
            local SliderBar = Instance.new("Frame")
            SliderBar.Size = UDim2.new(1, -20, 0, 6)
            SliderBar.Position = UDim2.new(0, 10, 1, -15)
            SliderBar.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            SliderBar.Parent = SliderFrame
            
            local BarCorner = Instance.new("UICorner")
            BarCorner.CornerRadius = UDim.new(1, 0)
            BarCorner.Parent = SliderBar
            
            local SliderFill = Instance.new("Frame")
            SliderFill.Size = UDim2.new(0, 0, 1, 0)
            SliderFill.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
            SliderFill.Parent = SliderBar
            
            local FillCorner = Instance.new("UICorner")
            FillCorner.CornerRadius = UDim.new(1, 0)
            FillCorner.Parent = SliderFill
            
            local SliderButton = Instance.new("TextButton")
            SliderButton.Size = UDim2.new(1, 0, 1, 0)
            SliderButton.Position = UDim2.new(0, 0, 0, 0)
            SliderButton.BackgroundTransparency = 1
            SliderButton.Text = ""
            SliderButton.Parent = SliderBar
            
            local dragging = false
            local min = Config.Range[1]
            local max = Config.Range[2]
            local increment = Config.Increment or 1
            local value = Config.CurrentValue or min
            
            local function updateSlider(input)
                local sizeX = math.clamp((input.Position.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X, 0, 1)
                value = math.floor(((max - min) * sizeX + min) / increment + 0.5) * increment
                value = math.clamp(value, min, max)
                
                SliderFill.Size = UDim2.new(sizeX, 0, 1, 0)
                SliderValue.Text = tostring(value)
                
                if Config.Callback then
                    Config.Callback(value)
                end
            end
            
            SliderButton.MouseButton1Down:Connect(function()
                dragging = true
            end)
            
            UserInputService.InputEnded:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 then
                    dragging = false
                end
            end)
            
            UserInputService.InputChanged:Connect(function(input)
                if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                    updateSlider(input)
                end
            end)
            
            SliderButton.MouseButton1Click:Connect(function()
                local mousePos = UserInputService:GetMouseLocation()
                updateSlider({Position = Vector2.new(mousePos.X, mousePos.Y)})
            end)
            
            local initialPercent = (value - min) / (max - min)
            SliderFill.Size = UDim2.new(initialPercent, 0, 1, 0)
        end
        
        -- CreateInput
        function Tab:CreateInput(Config)
            local InputFrame = Instance.new("Frame")
            InputFrame.Name = "Input"
            InputFrame.Size = UDim2.new(1, 0, 0, 70)
            InputFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            InputFrame.Parent = TabContent
            
            local InputCorner = Instance.new("UICorner")
            InputCorner.CornerRadius = UDim.new(0, 8)
            InputCorner.Parent = InputFrame
            
            local InputLabel = Instance.new("TextLabel")
            InputLabel.Size = UDim2.new(1, -20, 0, 20)
            InputLabel.Position = UDim2.new(0, 10, 0, 5)
            InputLabel.BackgroundTransparency = 1
            InputLabel.Text = Config.Name or "Input"
            InputLabel.TextColor3 = Color3.fromRGB(200, 200, 205)
            InputLabel.TextSize = 14
            InputLabel.Font = Enum.Font.Gotham
            InputLabel.TextXAlignment = Enum.TextXAlignment.Left
            InputLabel.Parent = InputFrame
            
            local InputBox = Instance.new("TextBox")
            InputBox.Size = UDim2.new(1, -20, 0, 32)
            InputBox.Position = UDim2.new(0, 10, 0, 30)
            InputBox.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
            InputBox.PlaceholderText = Config.PlaceholderText or "Enter text..."
            InputBox.PlaceholderColor3 = Color3.fromRGB(100, 100, 105)
            InputBox.Text = ""
            InputBox.TextColor3 = Color3.fromRGB(200, 200, 205)
            InputBox.TextSize = 13
            InputBox.Font = Enum.Font.Gotham
            InputBox.ClearTextOnFocus = false
            InputBox.Parent = InputFrame
            
            local InputBoxCorner = Instance.new("UICorner")
            InputBoxCorner.CornerRadius = UDim.new(0, 6)
            InputBoxCorner.Parent = InputBox
            
            local InputPadding = Instance.new("UIPadding")
            InputPadding.PaddingLeft = UDim.new(0, 10)
            InputPadding.PaddingRight = UDim.new(0, 10)
            InputPadding.Parent = InputBox
            
            InputBox.FocusLost:Connect(function(enterPressed)
                if enterPressed then
                    if Config.Callback then
                        Config.Callback(InputBox.Text)
                    end
                    if Config.RemoveTextAfterFocusLost then
                        InputBox.Text = ""
                    end
                end
            end)
        end
        
        -- CreateDropdown
        function Tab:CreateDropdown(Config)
            local DropdownFrame = Instance.new("Frame")
            DropdownFrame.Name = "Dropdown"
            DropdownFrame.Size = UDim2.new(1, 0, 0, 40)
            DropdownFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            DropdownFrame.Parent = TabContent
            
            local DropdownCorner = Instance.new("UICorner")
            DropdownCorner.CornerRadius = UDim.new(0, 8)
            DropdownCorner.Parent = DropdownFrame
            
            local DropdownText = Instance.new("TextLabel")
            DropdownText.Size = UDim2.new(1, -100, 1, 0)
            DropdownText.Position = UDim2.new(0, 10, 0, 0)
            DropdownText.BackgroundTransparency = 1
            DropdownText.Text = Config.Name or "Dropdown"
            DropdownText.TextColor3 = Color3.fromRGB(200, 200, 205)
            DropdownText.TextSize = 14
            DropdownText.Font = Enum.Font.Gotham
            DropdownText.TextXAlignment = Enum.TextXAlignment.Left
            DropdownText.Parent = DropdownFrame
            
            local DropdownButton = Instance.new("TextButton")
            DropdownButton.Size = UDim2.new(0, 90, 0, 28)
            DropdownButton.Position = UDim2.new(1, -100, 0.5, -14)
            DropdownButton.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
            DropdownButton.Text = Config.CurrentOption or Config.Options[1]
            DropdownButton.TextColor3 = Color3.fromRGB(200, 200, 205)
            DropdownButton.TextSize = 13
            DropdownButton.Font = Enum.Font.Gotham
            DropdownButton.Parent = DropdownFrame
            
            local DropdownBtnCorner = Instance.new("UICorner")
            DropdownBtnCorner.CornerRadius = UDim.new(0, 6)
            DropdownBtnCorner.Parent = DropdownButton
            
            local DropdownList = Instance.new("Frame")
            DropdownList.Size = UDim2.new(0, 90, 0, 0)
            DropdownList.Position = UDim2.new(1, -100, 1, 5)
            DropdownList.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
            DropdownList.Visible = false
            DropdownList.ZIndex = 10
            DropdownList.Parent = DropdownFrame
            
            local ListCorner = Instance.new("UICorner")
            ListCorner.CornerRadius = UDim.new(0, 6)
            ListCorner.Parent = DropdownList
            
            local ListLayout = Instance.new("UIListLayout")
            ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
            ListLayout.Padding = UDim.new(0, 2)
            ListLayout.Parent = DropdownList
            
            local ListPadding = Instance.new("UIPadding")
            ListPadding.PaddingTop = UDim.new(0, 5)
            ListPadding.PaddingBottom = UDim.new(0, 5)
            ListPadding.PaddingLeft = UDim.new(0, 5)
            ListPadding.PaddingRight = UDim.new(0, 5)
            ListPadding.Parent = DropdownList
            
            local expanded = false
            
            DropdownButton.MouseButton1Click:Connect(function()
                expanded = not expanded
                DropdownList.Visible = expanded
                
                if expanded then
                    DropdownList.Size = UDim2.new(0, 90, 0, #Config.Options * 28 + 10)
                else
                    DropdownList.Size = UDim2.new(0, 90, 0, 0)
                end
            end)
            
            for i, option in ipairs(Config.Options) do
                local OptionButton = Instance.new("TextButton")
                OptionButton.Size = UDim2.new(1, 0, 0, 24)
                OptionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
                OptionButton.Text = option
                OptionButton.TextColor3 = Color3.fromRGB(180, 180, 185)
                OptionButton.TextSize = 12
                OptionButton.Font = Enum.Font.Gotham
                OptionButton.ZIndex = 11
                OptionButton.Parent = DropdownList
                
                local OptionCorner = Instance.new("UICorner")
                OptionCorner.CornerRadius = UDim.new(0, 4)
                OptionCorner.Parent = OptionButton
                
                OptionButton.MouseButton1Click:Connect(function()
                    DropdownButton.Text = option
                    expanded = false
                    DropdownList.Size = UDim2.new(0, 90, 0, 0)
                    DropdownList.Visible = false
                    
                    if Config.Callback then
                        Config.Callback(option)
                    end
                end)
                
                OptionButton.MouseEnter:Connect(function()
                    OptionButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
                    OptionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                end)
                
                OptionButton.MouseLeave:Connect(function()
                    OptionButton.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
                    OptionButton.TextColor3 = Color3.fromRGB(180, 180, 185)
                end)
            end
        end
        
        -- CreateKeybind
        function Tab:CreateKeybind(Config)
            local KeybindFrame = Instance.new("Frame")
            KeybindFrame.Name = "Keybind"
            KeybindFrame.Size = UDim2.new(1, 0, 0, 40)
            KeybindFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            KeybindFrame.Parent = TabContent
            
            local KeybindCorner = Instance.new("UICorner")
            KeybindCorner.CornerRadius = UDim.new(0, 8)
            KeybindCorner.Parent = KeybindFrame
            
            local KeybindText = Instance.new("TextLabel")
            KeybindText.Size = UDim2.new(1, -100, 1, 0)
            KeybindText.Position = UDim2.new(0, 10, 0, 0)
            KeybindText.BackgroundTransparency = 1
            KeybindText.Text = Config.Name or "Keybind"
            KeybindText.TextColor3 = Color3.fromRGB(200, 200, 205)
            KeybindText.TextSize = 14
            KeybindText.Font = Enum.Font.Gotham
            KeybindText.TextXAlignment = Enum.TextXAlignment.Left
            KeybindText.Parent = KeybindFrame
            
            local KeybindButton = Instance.new("TextButton")
            KeybindButton.Size = UDim2.new(0, 60, 0, 28)
            KeybindButton.Position = UDim2.new(1, -70, 0.5, -14)
            KeybindButton.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
            KeybindButton.Text = Config.CurrentKeybind or "NONE"
            KeybindButton.TextColor3 = Color3.fromRGB(200, 200, 205)
            KeybindButton.TextSize = 13
            KeybindButton.Font = Enum.Font.GothamBold
            KeybindButton.Parent = KeybindFrame
            
            local KeybindBtnCorner = Instance.new("UICorner")
            KeybindBtnCorner.CornerRadius = UDim.new(0, 6)
            KeybindBtnCorner.Parent = KeybindButton
            
            local listening = false
            local currentKey = Config.CurrentKeybind or "NONE"
            
            KeybindButton.MouseButton1Click:Connect(function()
                listening = true
                KeybindButton.Text = "..."
                KeybindButton.BackgroundColor3 = Color3.fromRGB(138, 43, 226)
            end)
            
            UserInputService.InputBegan:Connect(function(input, gameProcessed)
                if listening and not gameProcessed then
                    if input.UserInputType == Enum.UserInputType.Keyboard then
                        local key = input.KeyCode.Name
                        currentKey = key
                        KeybindButton.Text = key
                        KeybindButton.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
                        listening = false
                        
                        if Config.Callback then
                            Config.Callback(key)
                        end
                    end
                end
            end)
        end
        
        -- CreateLabel
        function Tab:CreateLabel(Text)
            local LabelFrame = Instance.new("Frame")
            LabelFrame.Name = "Label"
            LabelFrame.Size = UDim2.new(1, 0, 0, 30)
            LabelFrame.BackgroundTransparency = 1
            LabelFrame.Parent = TabContent
            
            local Label = Instance.new("TextLabel")
            Label.Size = UDim2.new(1, -20, 1, 0)
            Label.Position = UDim2.new(0, 10, 0, 0)
            Label.BackgroundTransparency = 1
            Label.Text = Text
            Label.TextColor3 = Color3.fromRGB(180, 180, 185)
            Label.TextSize = 13
            Label.Font = Enum.Font.Gotham
            Label.TextXAlignment = Enum.TextXAlignment.Left
            Label.TextWrapped = true
            Label.Parent = LabelFrame
            
            return {
                Set = function(self, newText)
                    Label.Text = newText
                end
            }
        end
        
        -- CreateParagraph
        function Tab:CreateParagraph(Config)
            local ParagraphFrame = Instance.new("Frame")
            ParagraphFrame.Name = "Paragraph"
            ParagraphFrame.Size = UDim2.new(1, 0, 0, 80)
            ParagraphFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
            ParagraphFrame.Parent = TabContent
            
            local ParagraphCorner = Instance.new("UICorner")
            ParagraphCorner.CornerRadius = UDim.new(0, 8)
            ParagraphCorner.Parent = ParagraphFrame
            
            local Title = Instance.new("TextLabel")
            Title.Size = UDim2.new(1, -20, 0, 20)
            Title.Position = UDim2.new(0, 10, 0, 8)
            Title.BackgroundTransparency = 1
            Title.Text = Config.Title or "Paragraph"
            Title.TextColor3 = Color3.fromRGB(138, 43, 226)
            Title.TextSize = 14
            Title.Font = Enum.Font.GothamBold
            Title.TextXAlignment = Enum.TextXAlignment.Left
            Title.Parent = ParagraphFrame
            
            local Content = Instance.new("TextLabel")
            Content.Size = UDim2.new(1, -20, 1, -35)
            Content.Position = UDim2.new(0, 10, 0, 30)
            Content.BackgroundTransparency = 1
            Content.Text = Config.Content or ""
            Content.TextColor3 = Color3.fromRGB(180, 180, 185)
            Content.TextSize = 13
            Content.Font = Enum.Font.Gotham
            Content.TextXAlignment = Enum.TextXAlignment.Left
            Content.TextYAlignment = Enum.TextYAlignment.Top
            Content.TextWrapped = true
            Content.Parent = ParagraphFrame
            
            return {
                Set = function(self, newTitle, newContent)
                    Title.Text = newTitle
                    Content.Text = newContent
                end
            }
        end
        
        return Tab
    end
    
    return Window
end

-- Notification System
function Matcha:Notify(Config)
    local NotificationHolder = CoreGui:FindFirstChild("MatchaNotifications")
    
    if not NotificationHolder then
        NotificationHolder = Instance.new("ScreenGui")
        NotificationHolder.Name = "MatchaNotifications"
        NotificationHolder.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
        NotificationHolder.ResetOnSpawn = false
        NotificationHolder.Parent = CoreGui
        
        local NotificationContainer = Instance.new("Frame")
        NotificationContainer.Name = "Container"
        NotificationContainer.Size = UDim2.new(0, 300, 1, -20)
        NotificationContainer.Position = UDim2.new(1, -310, 0, 10)
        NotificationContainer.BackgroundTransparency = 1
        NotificationContainer.Parent = NotificationHolder
        
        local ListLayout = Instance.new("UIListLayout")
        ListLayout.SortOrder = Enum.SortOrder.LayoutOrder
        ListLayout.Padding = UDim.new(0, 10)
        ListLayout.VerticalAlignment = Enum.VerticalAlignment.Bottom
        ListLayout.Parent = NotificationContainer
    end
    
    local NotificationContainer = NotificationHolder:FindFirstChild("Container")
    
    local Notification = Instance.new("Frame")
    Notification.Size = UDim2.new(1, 0, 0, 80)
    Notification.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
    Notification.BorderSizePixel = 0
    Notification.Parent = NotificationContainer
    
    local NotifCorner = Instance.new("UICorner")
    NotifCorner.CornerRadius = UDim.new(0, 10)
    NotifCorner.Parent = Notification
    
    local NotifTitle = Instance.new("TextLabel")
    NotifTitle.Size = UDim2.new(1, -50, 0, 20)
    NotifTitle.Position = UDim2.new(0, 15, 0, 10)
    NotifTitle.BackgroundTransparency = 1
    NotifTitle.Text = Config.Title or "Notification"
    NotifTitle.TextColor3 = Color3.fromRGB(138, 43, 226)
    NotifTitle.TextSize = 14
    NotifTitle.Font = Enum.Font.GothamBold
    NotifTitle.TextXAlignment = Enum.TextXAlignment.Left
    NotifTitle.Parent = Notification
    
    local NotifContent = Instance.new("TextLabel")
    NotifContent.Size = UDim2.new(1, -30, 0, 40)
    NotifContent.Position = UDim2.new(0, 15, 0, 32)
    NotifContent.BackgroundTransparency = 1
    NotifContent.Text = Config.Content or ""
    NotifContent.TextColor3 = Color3.fromRGB(200, 200, 205)
    NotifContent.TextSize = 13
    NotifContent.Font = Enum.Font.Gotham
    NotifContent.TextXAlignment = Enum.TextXAlignment.Left
    NotifContent.TextYAlignment = Enum.TextYAlignment.Top
    NotifContent.TextWrapped = true
    NotifContent.Parent = Notification
    
    local CloseBtn = Instance.new("TextButton")
    CloseBtn.Size = UDim2.new(0, 20, 0, 20)
    CloseBtn.Position = UDim2.new(1, -28, 0, 8)
    CloseBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    CloseBtn.Text = "X"
    CloseBtn.TextColor3 = Color3.fromRGB(200, 200, 205)
    CloseBtn.TextSize = 14
    CloseBtn.Font = Enum.Font.GothamBold
    CloseBtn.Parent = Notification
    
    local CloseBtnCorner = Instance.new("UICorner")
    CloseBtnCorner.CornerRadius = UDim.new(0, 6)
    CloseBtnCorner.Parent = CloseBtn
    
    local duration = Config.Duration or 5
    
    spawn(function()
        wait(duration)
        Notification:Destroy()
    end)
    
    CloseBtn.MouseButton1Click:Connect(function()
        Notification:Destroy()
    end)
    
    CloseBtn.MouseEnter:Connect(function()
        CloseBtn.BackgroundColor3 = Color3.fromRGB(195, 57, 57)
    end)
    
    CloseBtn.MouseLeave:Connect(function()
        CloseBtn.BackgroundColor3 = Color3.fromRGB(35, 35, 40)
    end)
end

return Matcha
